{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","counter","setCounter","useEffect","timer","setInterval","clearInterval","className","id","class","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAiCeA,MA9Bf,WAAgB,IAAD,EACiBC,IAAMC,SAAS,IADhC,mBACNC,EADM,KACGC,EADH,KAYb,OALAH,IAAMI,WAAU,WACd,IAAMC,EACJH,EAAU,GAAKI,aAAY,kBAAMH,EAAWD,EAAU,KAAI,KAC5D,OAAO,kBAAMK,cAAcF,MAC1B,CAACH,IAEF,qBAAKM,UAAU,MAAf,SACE,yBAAQA,UAAW,oBAA2BN,EAA9C,UACE,8BACE,oBAAIO,GAAG,UAAUD,UAAW,uBAA8BN,EAA1D,SACGA,MAGL,8BACE,wBAAQQ,MAAM,SAASC,QAnBR,WACrBR,EAAW,KAkBL,0DCZKS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7afcde5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [counter, setCounter] = React.useState(15);\n  const onCounterClick = () => {\n    setCounter(15);\n  };\n\n  // Third Attempts\n  React.useEffect(() => {\n    const timer =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 5000);\n    return () => clearInterval(timer);\n  }, [counter]);\n  return (\n    <div className=\"App\">\n      <header className={\"App-header \" + \"count-\" + counter}>\n        <div>\n          <h1 id=\"counter\" className={\"timer-display \" + \"count-\" + counter}>\n            {counter}\n          </h1>\n        </div>\n        <div>\n          <button class=\"button\" onClick={onCounterClick}>\n            ᛖᛁᛊᚢᛒᚦ\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}